'''
요구사항
    - TL : 2s
    - L<=R<=20억
    - 0<L<=n<=R을 만족하는 n중에, 8이 가장 적게 들어있는 수에서 8의 개수가 몇 개인지 출력하여라

접근
    - 구현
    - O(logN)까지 가능
    - 8이 없는 경우도 고려해야한다
    - 무조건 들어가는 8의 수를 파악하면 된다

1. 구현
    - L과 R에서 가장 큰 자릿수부터 비교를하고, 둘 다 같은 자릿수에서 8이 들어가면 cnt를 +1한다
    - >>> fail
        - ex) 88 888 -> answer : 0, wrong : 3
2. 구현
    - 자릿수가 다르면 0, 같을때만 1번처럼 비교해준다
    - >>> fail
        - ex) 880 990 -> answer : 0, wrong : 1
3. 구현
    - 1번에서 가장 앞자리부터 비교를 하되, 가장 앞부터 연속적으로 같은 8을 찾아야한다
    - >>> fail
        - ex) 808 808 -> answer : 2, wrong : 1
4. 구현
    - 각 자릿수가 같되, 8이 아니라면 -> 그냥 pass 하고 다음 자릿수로 넘어간다
'''
a,b = input().split()
cnt = 0
if len(a) == len(b):
    for i in range(len(a)):
        # 각 자릿수가 같을 때
        if a[i] == b[i]:
            if a[i] == "8":
                cnt +=1
        # 각 자릿수가 달라지면 바로 종료
        else:
            break
print(cnt)